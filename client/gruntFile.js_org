module.exports = function(grunt) {

  grunt.loadNpmTasks('grunt-contrib-concat');
  grunt.loadNpmTasks('grunt-contrib-coffee');
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-contrib-copy');
  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-contrib-compass');
  grunt.loadNpmTasks('grunt-contrib-cssmin');
  grunt.loadNpmTasks('grunt-karma');
  grunt.loadNpmTasks('grunt-html2js');
  grunt.loadNpmTasks('grunt-usemin');
  grunt.loadNpmTasks('grunt-rev');

  // Default tasks
  grunt.registerTask('default',['build','karma:unit']);
  grunt.registerTask('build',['clean','html2js','useminPrepare','coffee','compass:dist','copy:styles','concat','copy:dist','usemin','concat:index']);

  // Print a timestamp while watching
  grunt.registerTask('timestamp',function(){
    grunt.log.subhead(Date());
  });

  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    distdir: 'dist',
    banner: '/* <%= pkg.name %> - v<%= pkg.version %> - <%= grunt.template.today("yyyy-mm-dd") %>\n' +
            ' * Copyright (c) <%= grunt.template.today("yyyy") %> <%= pkg.author %>;\n' + 
            ' * Licensed <%= _.pluck(pkg.licenses,"type").join(", ") %>\n' + 
            ' */\n',
    src: {
      coffee: ['src/**/*.coffee'],
      tpl: {
        app: ['src/app/**/*.tpl.html'],
        common: ['src/common/**/*.tpl.html']
      },
      coffeeTpl: ['<%= distdir %>/templates/**/*.coffee'],
      specs: ['test/**/*.spec.js'],
      scenarios: ['test/**/*.scenario.js'],
      html: ['src/index.html']
    },
    clean: ['<%= distdir %>'],
    html2js: {
      app: {
        options: {
          base: 'src/app',
          target: 'coffee'
        },
        src: ['<%= src.tpl.app %>'],
        dest: '<%= distdir %>/templates/app.coffee',
        module: 'templates.coffee'
      },
      common: {
        options: {
          base: 'src/common',
          target: 'coffee'
        },
        src: ['<%= src.tpl.common %>'],
        dest: '<%= distdir %>/templates/common.coffee',
        module: 'templates.common'
      }
    },
    compass: {
      options: {
        sassDir: 'src/compass',
        cssDir: '.tmp/concat/styles',
        imagesDir: 'src/images',
        generatedImagesDir: '.tmp/images/generated',
        javascriptsDir: 'src/app',
        fontsDir: 'src/styles/fonts',
        importPath: 'src/bower_components',
        httpImagesPath: '/images',
        httpGeneratedImagesPath: '/images/generated',
        httpFontsPath: '/styles/fonts',
        relativeAssets: false
      },
      dist: {}
    },
    useminPrepare: {
      options: {
        dest: '<%= distdir %>'
      },
      html: 'src/index.html'
    },
    usemin: {
      html: ['<%= distdir %>/{,*/}*.html'],
      css: ['<%= distdir %>/styles/{,*/}*.css']
    },
    cssmin: {
    },
    concat: {
      index: {
        src: ['dist/index.html'],
        dest: '<%= distdir %>/index.html'
      },
      options: {
        process: true
      }
    },
    coffee: {
      dist: {
        options: {
          sourceMap: true
        },
        src: ['<%= src.coffee %>', '<%= src.coffeeTpl %>'],
        dest: '.tmp/<%= pkg.name %>.js'
      }
    },
    copy: {
      html: {
        files: { '<%= distdir %>/index.html': ['src/index.html'] }
      },
      styles: {
        expand: true,
        cwd: 'src/styles',
        dest: '.tmp/concat/styles/',
        src: '{,*/}*.css'
      },
      dist: {
        files: [{
          expand: true,
          cwd: 'src',
          dest: '<%= distdir %>',
          src: [
            'index.html',
            '*.{ico,png,txt}',
            'images/{,*/}*.gif',
            'styles/fonts/*'
              ]},
          {
            expand: true,
            cwd: '.tmp',
            dest: '<%= distdir %>',
            src: [ '*.js' ]
          },
          {
            expand: true,
            cwd: '.tmp/concat',
            dest: '<%= distdir %>',
            src: [
              '{,*/}*.js',
              'styles/{,*/}*'
            ]
        }]
      }
    }
  });
}
